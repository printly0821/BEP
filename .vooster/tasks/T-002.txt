# 핵심 기능 UI Mockup: 계산기 페이지 UI-only 구현

**Task ID:** T-002
**Status:** DONE
**Importance:** MUST
**Complexity:** 8/10
**Urgency:** 9/10
**Dependencies:** None

## Description

## 작업 목표

'쉬잇크루 BEP 마진계산기'의 핵심 기능인 계산기 페이지(`/calculator`)의 UI를 `shadcn-ui` 컴포넌트를 사용하여 UI-only로 구현합니다. 이 단계에서는 상태 관리나 비즈니스 로직 없이 시각적인 레이아웃과 컴포넌트 구조에만 집중합니다. 반응형 디자인을 고려하여 모바일과 데스크톱 뷰를 모두 지원해야 합니다.

---

### 1. 제품 요약 (Product Summary)

초기·예비 창업자가 판매가, 원가, 고정비만 입력하면 5분 안에 손익분기점과 목표 수익 달성을 위한 판매량을 직관적 그래프와 리포트로 제공하는 웹 기반 계산기입니다.

### 2. 타겟 사용자 (Target Users)

1.  **예비 창업자:** 재무 지식이 부족하지만, 사업의 수익성을 빠르게 검증하고 싶어하는 사용자.
2.  **초기 소규모 온라인 셀러:** 판매 가격이나 원가 변동에 따른 이익 변화를 시뮬레이션하고 싶은 사용자.

### 3. 디자인 무드 (Design Mood)

*   **Modern & Clean:** 현대적이고 깔끔한 인터페이스
*   **Intuitive:** 처음 방문한 사용자도 쉽게 사용할 수 있는 직관적인 경험
*   **Data-driven:** 데이터와 그래프를 명확하게 시각화하여 신뢰감을 줌

### 4. 컬러 팔레트 (Color Palette)

*   **Primary:** `#007BFF` (주요 버튼, 활성 요소)
*   **Secondary:** `#F1F5F9` (보조 요소 배경)
*   **Background:** `#FFFFFF` (페이지 배경)
*   **Foreground:** `#020817` (기본 텍스트)
*   **Border:** `#E2E8F0` (구분선, 카드 테두리)

### 5. UI 가이드라인 (UI Guidelines)

*   **컴포넌트 라이브러리:** `shadcn-ui`를 적극적으로 활용합니다. (`Card`, `Input`, `Button`, `Slider`, `Tooltip` 등)
*   **레이아웃:** `flex`와 `grid`를 사용하여 반응형 레이아웃을 구성합니다.
*   **간격:** `4px` 단위를 기본으로 하는 일관된 간격 시스템을 사용합니다. (`p-4`, `m-8`, `gap-2` 등)
*   **아이콘:** `lucide-react` 라이브러리의 아이콘을 사용합니다.

### 6. 사용자 여정 (User Journey)

`랜딩` → `입력폼 작성` → `결과 대시보드 확인` → `슬라이더 시뮬레이션`

### 7. 공통 컴포넌트 (Common Components)

*   `Header`: 로고, 네비게이션 메뉴 (계산기, 프로젝트, 요금제), 로그인 버튼
*   `Footer`: 이용약관, 개인정보처리방침, 소셜 미디어 링크
*   `MetricCard`: KPI 수치를 시각적으로 표시하는 카드 (예: 손익분기점 판매량)
*   `ChartPlaceholder`: 민감도 분석 그래프가 들어갈 영역 (실제 차트 라이브러리 연동 전 임시 컴포넌트)

### 8. 사이트맵 (Sitemap)

이번 작업은 아래 경로에 해당하는 페이지만 구현합니다.

*   `/calculator`: 모든 사용자가 접근 가능한 메인 계산기 페이지

### 9. 페이지 구현: `/calculator`

*   **핵심 목적 (Core Purpose):** 사용자가 최소한의 정보를 입력하여 손익분기점(BEP)과 목표 수익 달성을 위한 판매량을 즉시 계산하고 시각적으로 확인하는 것.
*   **핵심 컴포넌트 (Key Components):**
    1.  **입력 폼 (`CalculatorForm`):**
        *   `판매가 (Selling Price)`: `Input` 컴포넌트, 숫자만 입력 가능.
        *   `단위 원가 (Variable Cost)`: `Input` 컴포넌트, 숫자만 입력 가능.
        *   `월 고정비 (Fixed Cost)`: `Input` 컴포넌트, 숫자만 입력 가능.
        *   `목표 수익 (Target Profit)`: `Input` 컴포넌트 (선택 사항).
        *   각 입력 필드 옆에 `Info` 아이콘과 `Tooltip`으로 간단한 설명 제공.
    2.  **결과 대시보드 (`ResultsDashboard`):**
        *   `MetricCard` 4개: `손익분기점 판매량`, `목표 달성 판매량`, `예상 월 매출`, `예상 월 이익`.
        *   각 카드에는 제목, 큰 숫자, 단위(개, 원)가 포함됨.
    3.  **민감도 분석 그래프 (`SensitivityChart`):**
        *   그래프 라이브러리 구현 전이므로, 회색 배경의 `div`와 중앙에 "그래프 영역" 텍스트로 Placeholder 처리.
    4.  **시뮬레이션 패널 (`SimulationPanel`):**
        *   `판매가 조정`: `Slider` 컴포넌트
        *   `원가 조정`: `Slider` 컴포넌트
    5.  **액션 버튼 (`ActionButtons`):**
        *   `PDF 다운로드`: `Button` 컴포넌트 (Secondary 스타일)
        *   `프로젝트로 저장`: `Button` 컴포넌트 (Primary 스타일)

*   **레이아웃 구조 (Layout Structure):**
    *   **데스크톱:** 2단 그리드 구조.
        *   **왼쪽 열 (1/3 너비):** 입력 폼, 시뮬레이션 패널, 액션 버튼 순으로 수직 배치.
        *   **오른쪽 열 (2/3 너비):** 결과 대시보드(MetricCard 그리드), 민감도 분석 그래프 Placeholder 순으로 수직 배치.
    *   **모바일:** 1단 구조. 모든 컴포넌트가 수직으로 순차 배치.
        *   `입력 폼` → `결과 대시보드` → `민감도 분석 그래프` → `시뮬레이션 패널` → `액션 버튼` 순서.

### 10. 레이아웃 컴포넌트 (Layout Components)

*   **적용 경로 (Applicable Routes):** `/calculator`
*   **핵심 컴포넌트 (Core Components):** `Header`, `Footer`, `Main` 태그
*   **반응형 동작 (Responsive Behavior):** 화면 너비 `1024px`을 기준으로 데스크톱/모바일 레이아웃이 전환됩니다. (`lg:` prefix 사용)

MUST Guidelines:
- only implement what is written in prompt.
- tidy first.
- Implement UI-only mockup only. Use **dummy data** for now.
- Be sure every routing works.
-Be sure root route works.


  

---

**Created:** 2025-10-08T04:55:38.837Z
**Updated:** 2025-10-09T15:21:45.661Z
